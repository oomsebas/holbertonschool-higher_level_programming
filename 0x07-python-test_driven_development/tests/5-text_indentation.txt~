Task 5 text indentation
========================

text must be a string, otherwise raise a TypeError exception with the message
text must be a string
There should be no space at the beginning or at the end of each printed line
_________________________

>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text_indentation("hola.sebas:orozco?")
hola.
<BLANKLINE>
sebas:
<BLANKLINE>
orozco?
<BLANKLINE>

Checking docstring for module:
>>> __import__('5-text_indentation').__doc__ != None
True

Import ``add_integer`` from the ``5-text_indentation`` module:
>>> text_indentation = __import__('5-text_indentation').text_indentation

Check docstring for function:
>>> len(text_indentation.__doc__) > 0
True

Check for a string:
>>> text_indentation("Test")
Test
>>> text_indentation("Test.")
Test.
<BLANKLINE>
>>> text_indentation(".Test")
.
<BLANKLINE>
Test
>>> text_indentation("Test?")
Test?
<BLANKLINE>
>>> text_indentation("Test:")
Test:
<BLANKLINE>
>>> text_indentation("Test.Test:Test?Test")
Test.
<BLANKLINE>
Test:
<BLANKLINE>
Test?
<BLANKLINE>
Test
>>> text_indentation("?.:")
?
<BLANKLINE>
.
<BLANKLINE>
:
<BLANKLINE>
>>> text_indentation("Hello." "world")
Hello.
<BLANKLINE>
world
>>> text_indentation("  H  Hello.   ")
H  Hello.
<BLANKLINE>

Check for no string type:
>>> text_indentation(None)
Traceback (most recent call last):
...
TypeError: text must be a string
>>> text_indentation((4, "H"))
Traceback (most recent call last):
...
TypeError: text must be a string

Calling empty function:
>>> text_indentation()
Traceback (most recent call last):
...
TypeError: text_indentation() missing 1 required positional argument: 'text'

Calling function with more than 1 arguments:
>>> text_indentation("Test", "Test")
Traceback (most recent call last):
...
TypeError: text_indentation() takes 1 positional argument but 2 were givenxk

>>> text_indentation("     .        :      ?         ")
.
<BLANKLINE>
:
<BLANKLINE>
?
<BLANKLINE>

>>> text_indentation("h     . y       : we     ? we        ")
h     .
<BLANKLINE>
y       :
<BLANKLINE>
we     ?
<BLANKLINE>
we

>>> text_indentation("hola. . y       ::: we     ?? we        ")
hola.
<BLANKLINE>
.
<BLANKLINE>
y       :
<BLANKLINE>
:
<BLANKLINE>
:
<BLANKLINE>
we     ?
<BLANKLINE>
?
<BLANKLINE>
we
